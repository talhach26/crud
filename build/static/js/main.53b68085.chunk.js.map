{"version":3,"sources":["context/TasklistContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TaskListContext","createContext","TaskListProvider","props","useState","title","id","tasks","setTasks","editItem","setEditItem","Provider","value","length","filter","task","item","find","newTasks","map","children","Task","useContext","removeTask","findItem","className","onClick","TaskList","console","log","TaskForm","addTask","clearList","editTask","setTitle","useEffect","onSubmit","e","preventDefault","type","placeholder","required","onChange","target","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53b68085.chunk.js","sourcesContent":["import React,{useState,createContext} from 'react'\n\n\nexport const TaskListContext =createContext()\n\nexport const TaskListProvider=props=>{\n  \nconst [tasks,setTasks]=useState([\n  {title:'Read the book',id:0},\n  {title:'Wash the Car',id:1},\n  {title:'Write some code',id:2}\n])\n\nconst [editItem,setEditItem]=useState(null)\n\nconst addTask=(title)=>{\n  setTasks([...tasks,{title,id:tasks.length+1}])\n}\nconst removeTask=id=>{\n  setTasks(tasks.filter(task=>task.id !== id))\n\n}\nconst clearList=()=>{\n  setTasks([])\n}\nconst findItem=id=>{\n  const item=tasks.find(task=>task.id===id)\n  setEditItem(item)\n\n}\nconst editTask=(title,id)=>{\n  const newTasks=tasks.map(task=> (task.id===id?{title,id}:task) )\n  setTasks(newTasks)\n  setEditItem(null)\n}\n\n  return(\n     <TaskListContext.Provider value={[tasks,addTask,removeTask,clearList,findItem,editTask,editItem]}>\n       {props.children}\n     </TaskListContext.Provider>\n  )\n}\n\n","import React,{useContext} from 'react'\nimport {TaskListContext} from '../context/TasklistContext'\n\nfunction Task({task}) {\n  const [tasks,addTask,removeTask,clearList,findItem]=useContext(TaskListContext)\n  return (\n    <div>\n      <li className='list-item'>\n      <span>{task.title}</span>\n      <div>\n        <button onClick={()=>{removeTask(task.id)}} className='btn-delete task-btn'><i className='fas fa-trash-alt'></i></button>\n        <button onClick={()=>findItem(task.id)} className='btn-edit task-btn'><i className='fas fa-pen '></i></button>\n      </div>\n      </li>\n    </div>\n  )\n}\n\nexport default Task\n","import React,{useContext} from 'react'\nimport {TaskListContext} from '../context/TasklistContext'\nimport Task from './Task'\n\nconst TaskList=()=> {\n  \n const [tasks,addTask]=useContext(TaskListContext)\n  console.log(tasks)\n  return (\n    <div>\n      {tasks.length ? (\n         <ul className='list'>\n         {tasks?.map(task => ( <Task task={task} key={task.id}/> ))}\n          \n          \n        </ul>  \n      ):(\n        <div className='no-tasks'>No Tasks</div>\n      )}\n     \n      \n    </div>\n  )\n}\n\nexport default TaskList\n","import React,{useContext,useState,useEffect} from 'react'\nimport {TaskListContext} from '../context/TasklistContext'\n\nconst TaskForm=()=> {\n  const[tasks,addTask,removeTask,clearList,findItem,editTask,editItem] =useContext(TaskListContext)\n\n  const [title,setTitle]=useState('')\n\n  const handleSubmit=e=>{\n    e.preventDefault()\n    if(!editItem)\n    {\n      addTask(title)\n      setTitle(\"\")\n\n    }else{\n      editTask(title,editItem.id)\n    }\n    \n\n  }\n  const handleChange=e=>{\n    setTitle(e.target.value)\n   \n\n  }\n\n  useEffect(()=>{\n    if(editItem){\n      setTitle(editItem.title)\n      console.log(editItem)\n\n    }\n    else\n    {\n      setTitle('')\n    }\n\n  },[editItem])\n\n  return (\n    <form onSubmit={handleSubmit} className='form'>\n      <input type='text' className='task-input' placeholder='Add Task...' required\n      value={title}\n        onChange={handleChange} />\n      <div className='buttons'>\n        <button type='submit' className='btn add-task-btn'>{editItem ? 'Edit Task':'Add Task'}</button>\n        <button onClick={clearList} className='btn clear-btn'>Clear</button>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm\n","import React from 'react'\n\nfunction Header() {\n  return (\n    <div className='header'>\n      <h1>Task Manager</h1>\n      \n    </div>\n  )\n}\n\nexport default Header\n","\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TaskList from './components/TaskList'\nimport {TaskListProvider} from './context/TasklistContext'\nimport TaskForm from './components/TaskForm';\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n  \n    < TaskListProvider>\n      <div className=\"container\">\n        <div className='app-wrapper'>\n          < Header />\n          <div className='main'>\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListProvider>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}